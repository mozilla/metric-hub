[metrics]

[metrics.uri_count]
data_source = "baseline"
select_expression = '{{agg_sum("metrics.counter.events_total_uri_count")}}'
friendly_name = "URIs visited"
description = "Counts the number of URIs each client visited"

[metrics.active_hours]
select_expression = "COALESCE(SUM(metrics.timespan.glean_baseline_duration.value), 0) / 3600.0"
data_source = "baseline"
friendly_name = "Active Hours"
description = "Total time Firefox was active"

[metrics.ad_clicks]
select_expression = "{{agg_sum('ad_click')}}"
data_source = "mobile_search_clients_engines_sources_daily"
friendly_name = "Ad Clicks"
description = """
    Counts clicks on ads on search engine result pages with a Mozilla
    partner tag.
"""

[metrics.days_of_use]
friendly_name = "Days of use"
description = "The number of days in an observation window that clients used the browser."
select_expression = "COUNT(DISTINCT DATE(submission_timestamp))"
data_source = "baseline"

[metrics.tagged_sap_searches]
select_expression = "{{agg_sum('tagged_sap')}}"
data_source = "mobile_search_clients_engines_sources_daily"
friendly_name = "Tagged SAP Searches"
description = "Total number of tagged SAP searches."

[metrics.search_count]
friendly_name = "SAP search count"
description = "Number of searches performed through a Search Access Point."
select_expression = "{{agg_sum('search_count')}}"
data_source = "mobile_search_clients_engines_sources_daily"

[metrics.user_reports_site_issue_count]
data_source = "events"
select_expression = """
    COUNTIF(event.name = 'browser_menu_action' AND 
    mozfun.map.get_key(event.extra, 'item') = 'report_site_issue')
"""
friendly_name = "Site issues reported"
description = "Counts the number of times clients reported an issue with a site."


[metrics.user_reload_count]
data_source = "events"
select_expression = """
    COUNTIF(event.name = 'browser_menu_action' AND 
    mozfun.map.get_key(event.extra, 'item') = 'reload')
"""
friendly_name = "Pages reloaded"
description = "Counts the number of times a client reloaded a page."
bigger_is_better = false


[metrics.baseline_ping_count]
data_source = "baseline"
select_expression = "COUNT(document_id)"
friendly_name = "Baseline pings"
description = "Counts the number of `baseline` pings received from each client."


[metrics.metric_ping_count]
data_source = "metrics"
select_expression = "COUNT(document_id)"
friendly_name = "Metrics pings"
description = "Counts the number of `metrics` pings received from each client."



[metrics.first_run_date]
data_source = "baseline"
select_expression = "MIN(client_info.first_run_date)"
friendly_name = "First run date"
description = "The earliest first-run date reported by each client."

[metrics.performance_pageload_load_time]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_load_time IGNORE NULLS)"
friendly_name = "Pageload Load Time"
description = "Time in milliseconds from navigationStart to loadEventStart for the foreground http or https root content document."
category = "performance"
type = "histogram"

[metrics.performance_pageload_load_time_responsestart]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_load_time_responsestart IGNORE NULLS)"
friendly_name = "Pageload Load Time Response Start"
description = "Time in milliseconds from responseStart to loadEventStart for the foreground http or https root content document."
category = "performance"
type = "histogram"

[metrics.performance_pageload_req_anim_frame_callback]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_req_anim_frame_callback IGNORE NULLS)"
friendly_name = "Pageload Load Req Animation Frame Callback"
description = "Time spent in milliseconds calling all request animation frame callbacks for a document before it has reached readystate complete."
category = "performance"
type = "histogram"

[metrics.performance_pageload_dcl]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_dcl IGNORE NULLS)"
friendly_name = "Pageload DCL"
description = "Time in milliseconds from navigationStart to domContentLoaded for the foreground http or https root content document."
category = "performance"
type = "histogram"

[metrics.performance_pageload_dcl_responsestart]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_dcl_responsestart IGNORE NULLS)"
friendly_name = "Pageload DCL Response Start"
description = "Time in milliseconds from responseStart to domContentLoaded for the foreground http or https root content document."
category = "performance"
type = "histogram"

[metrics.performance_pageload_fcp]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_fcp IGNORE NULLS)"
friendly_name = "Pageload FCP"
description = "The time between navigationStart and the first contentful paint of a foreground http or https root content document, in milliseconds. The contentful paint timestamp is taken during display list building and does not include rasterization or compositing of that paint."
category = "performance"
type = "histogram"

[metrics.performance_pageload_fcp_responsestart]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.performance_pageload_fcp_responsestart IGNORE NULLS)"
friendly_name = "Pageload FCP Response Start"
description = "The time between responseStart and the first contentful paint of a foreground http or https root content document, in milliseconds. The contentful paint timestamp is taken during display list building and does not include rasterization or compositing of that paint."
category = "performance"
type = "histogram"

[metrics.perf_startup_cold_main_app_to_first_frame]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.perf_startup_cold_main_app_to_first_frame IGNORE NULLS)"
friendly_name = "Startup Cold Main App to First Frame"
description = "The duration from `*Application`'s initializer to the first Android frame\nbeing drawn in a [COLD MAIN start\nup](https://wiki.mozilla.org/index.php?title=Performance/Fenix/Glossary)."
category = "performance"
type = "histogram"

[metrics.perf_startup_cold_view_app_to_first_frame]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.timing_distribution.perf_startup_cold_view_app_to_first_frame IGNORE NULLS)"
friendly_name = "Startup Cold View App to First Frame"
description = "The duration from `*Application`'s initializer to the first Android frame\nbeing drawn in a [COLD VIEW start\nup](https://wiki.mozilla.org/index.php?title=Performance/Fenix/Glossary)."
category = "performance"
type = "histogram"

[metrics.storage_stats_app_bytes]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.memory_distribution.storage_stats_app_bytes IGNORE NULLS)"
friendly_name = "App Byte Size"
description = "The size of the app's APK and related files as installed: this is expected\nto be larger than download size."
category = "performance"
type = "histogram"

[metrics.storage_stats_cache_bytes]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.memory_distribution.storage_stats_cache_bytes IGNORE NULLS)"
friendly_name = "Cache Byte Size"
description = "The size of all cached data in the app."
category = "performance"
type = "histogram"

[metrics.storage_stats_data_dir_bytes]
data_source = "metrics"
select_expression = "ARRAY_AGG(metrics.memory_distribution.storage_stats_data_dir_bytes IGNORE NULLS)"
friendly_name = "Data Dir Byte Size"
description = "The size of all data minus `cache_bytes`."
category = "performance"
type = "histogram"


[data_sources]

[data_sources.baseline]
from_expression = """(
    SELECT
        p.*,
        DATE(p.submission_timestamp) AS submission_date
    FROM `moz-fx-data-shared-prod.{dataset}.baseline` p
)"""
client_id_column = "client_info.client_id"
experiments_column_type = "glean"
default_dataset = "org_mozilla_firefox"
friendly_name = "Baseline"
description = "Baseline Ping"
build_id_column = "REPLACE(CAST(DATE(mozfun.norm.fenix_build_to_datetime(client_info.app_build)) AS STRING), '-', '')"

[data_sources.events]
from_expression = """(
    SELECT
        p.* EXCEPT (events),
        DATE(p.submission_timestamp) AS submission_date,
        event
    FROM
        `moz-fx-data-shared-prod.{dataset}.events` p
    CROSS JOIN
        UNNEST(p.events) AS event
)"""
client_id_column = "client_info.client_id"
experiments_column_type = "glean"
default_dataset = "org_mozilla_firefox"
friendly_name = "Events"
description = "Events Ping"
build_id_column = "REPLACE(CAST(DATE(mozfun.norm.fenix_build_to_datetime(client_info.app_build)) AS STRING), '-', '')"

[data_sources.metrics]
from_expression = """(
    SELECT
        p.*,
        DATE(p.submission_timestamp) AS submission_date
    FROM `moz-fx-data-shared-prod.{dataset}.metrics` p
)"""
client_id_column = "client_info.client_id"
experiments_column_type = "glean"
default_dataset = "org_mozilla_firefox"
friendly_name = "Metrics"
description = "Metrics Ping"
build_id_column = "REPLACE(CAST(DATE(mozfun.norm.fenix_build_to_datetime(client_info.app_build)) AS STRING), '-', '')"

[data_sources.mobile_search_clients_engines_sources_daily]
from_expression = "mozdata.search.mobile_search_clients_engines_sources_daily"
experiments_column_type = "simple"
