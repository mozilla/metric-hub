[metrics]
daily = ["admarketplace_sponsored_impressions",
          "fakespot_amazon_impressions",
          "fakespot_bestbuy_impressions",
          "fakespot_walmart_impressions",
          "fakespot_impressions",
          "fakespot_amazon_impression_rate",
          "fakespot_bestbuy_impression_rate",
          "fakespot_walmart_impression_rate",
          "fakespot_impression_rate",
          "fakespot_amazon_clicks",
          "fakespot_bestbuy_clicks",
          "fakespot_walmart_clicks",
          "fakespot_clicks",
          "fakespot_amazon_ctr",
          "fakespot_bestbuy_ctr",
          "fakespot_walmart_ctr",
          "fakespot_ctr",
          "fakespot_amazon_not_relevant_dismissals",
          "fakespot_bestbuy_not_relevant_dismissals",
          "fakespot_walmart_not_relevant_dismissals",
          "fakespot_not_relevant_dismissals",
          "fx_urlbar_quick_suggest_remote_settings_latency_ms",
          "fakespot_4_star_A_grade",
          "fakespot_4_star_B_grade",
          "fakespot_5_star_A_grade",
          "fakespot_5_star_B_grade"]
          
weekly = ["admarketplace_sponsored_impressions",
          "fakespot_amazon_impressions",
          "fakespot_bestbuy_impressions",
          "fakespot_walmart_impressions",
          "fakespot_impressions",
          "fakespot_amazon_impression_rate",
          "fakespot_bestbuy_impression_rate",
          "fakespot_walmart_impression_rate",
          "fakespot_impression_rate",
          "fakespot_amazon_clicks",
          "fakespot_bestbuy_clicks",
          "fakespot_walmart_clicks",
          "fakespot_clicks",
          "fakespot_amazon_ctr",
          "fakespot_bestbuy_ctr",
          "fakespot_walmart_ctr",
          "fakespot_ctr",
          "fakespot_amazon_not_relevant_dismissals",
          "fakespot_bestbuy_not_relevant_dismissals",
          "fakespot_walmart_not_relevant_dismissals",
          "fakespot_not_relevant_dismissals",
          "fx_urlbar_quick_suggest_remote_settings_latency_ms",
          "fakespot_4_star_A_grade",
          "fakespot_4_star_B_grade",
          "fakespot_5_star_A_grade",
          "fakespot_5_star_B_grade"]

overall = ["admarketplace_sponsored_impressions",
          "fakespot_amazon_impressions",
          "fakespot_bestbuy_impressions",
          "fakespot_walmart_impressions",
          "fakespot_impressions",
          "fakespot_amazon_impression_rate",
          "fakespot_bestbuy_impression_rate",
          "fakespot_walmart_impression_rate",
          "fakespot_impression_rate",
          "fakespot_amazon_clicks",
          "fakespot_bestbuy_clicks",
          "fakespot_walmart_clicks",
          "fakespot_clicks",
          "fakespot_amazon_ctr",
          "fakespot_bestbuy_ctr",
          "fakespot_walmart_ctr",
          "fakespot_ctr",
          "fakespot_amazon_not_relevant_dismissals",
          "fakespot_bestbuy_not_relevant_dismissals",
          "fakespot_walmart_not_relevant_dismissals",
          "fakespot_not_relevant_dismissals",
          "fx_urlbar_quick_suggest_remote_settings_latency_ms",
          "fakespot_4_star_A_grade",
          "fakespot_4_star_B_grade",
          "fakespot_5_star_A_grade",
          "fakespot_5_star_B_grade"]

## Impressions
[metrics.admarketplace_sponsored_impressions]
select_expression = "COUNT(DISTINCT IF(is_terminal AND result.product_result_type = 'admarketplace_sponsored', event_id, NULL))"
data_source = "urlbar_events_unnested_results"
friendly_name = "ADM sponsored impression counts"
description = "Number of ADM sponsored impressions"
[metrics.admarketplace_sponsored_impressions.statistics.bootstrap_mean]

[metrics.fakespot_amazon_impressions]
select_expression = "COUNT(DISTINCT IF(is_terminal AND result.result_type = 'rust_fakespot_amazon', event_id, NULL))"
data_source = "urlbar_events_unnested_results"
friendly_name = "Amazon Fakespot impression counts"
description = "Number of Fakespot impressions with provider Amazon (not available on control)"
[metrics.fakespot_amazon_impressions.statistics.bootstrap_mean]

[metrics.fakespot_bestbuy_impressions]
select_expression = "COUNT(DISTINCT IF(is_terminal AND result.result_type = 'rust_fakespot_bestbuy', event_id, NULL))"
data_source = "urlbar_events_unnested_results"
friendly_name = "Bestbuy Fakespot impression counts"
description = "Number of Fakespot impressions with provider Bestbuy (not available on control)"
[metrics.fakespot_bestbuy_impressions.statistics.bootstrap_mean]

[metrics.fakespot_walmart_impressions]
select_expression = "COUNT(DISTINCT IF(is_terminal AND result.result_type = 'rust_fakespot_walmart', event_id, NULL))"
data_source = "urlbar_events_unnested_results"
friendly_name = "Walmart Fakespot impression counts"
description = "Number of Fakespot impressions with provider Walmart (not available on control)"
[metrics.fakespot_walmart_impressions.statistics.bootstrap_mean]

[metrics.fakespot_impressions]
select_expression = "COUNT(DISTINCT IF(is_terminal AND result.result_type in ('rust_fakespot_amazon', 'rust_fakespot_bestbuy', 'rust_fakespot_walmart'), event_id, NULL))"
data_source = "urlbar_events_unnested_results"
friendly_name = "Fakespot impression counts"
description = "Number of Fakespot impressions (not available on control)"
[metrics.fakespot_impressions.statistics.bootstrap_mean]

## Impression Rate
[metrics.admarketplace_sponsored_impression_rate]
depends_on = ["admarketplace_sponsored_impressions", "urlbar_impressions"]
friendly_name = "Admarketplace Impression Rate"
description = "Proportion of Admarketplace impressions out of all urlbar sessions (not available on control)"

[metrics.admarketplace_sponsored_impression_rate.statistics.population_ratio]
numerator = "admarketplace_sponsored_impressions"
denominator = "urlbar_impressions"

[metrics.fakespot_amazon_impression_rate]
depends_on = ["fakespot_amazon_impressions", "urlbar_impressions"]
friendly_name = "Fakespot Amazon Impression Rate"
description = "Proportion of Fakespot Amazon impressions out of all urlbar sessions (not available on control)"

[metrics.fakespot_amazon_impression_rate.statistics.population_ratio]
numerator = "fakespot_amazon_impressions"
denominator = "urlbar_impressions"

[metrics.fakespot_bestbuy_impression_rate]
depends_on = ["fakespot_bestbuy_impressions", "urlbar_impressions"]
friendly_name = "Fakespot Bestbuy Impression Rate"
description = "Proportion of Fakespot Bestbuy impressions out of all urlbar sessions (not available on control)"

[metrics.fakespot_bestbuy_impression_rate.statistics.population_ratio]
numerator = "fakespot_bestbuy_impressions"
denominator = "urlbar_impressions"

[metrics.fakespot_walmart_impression_rate]
depends_on = ["fakespot_walmart_impressions", "urlbar_impressions"]
friendly_name = "Fakespot Walmart Impression Rate"
description = "Proportion of Fakespot Walmart impressions out of all urlbar sessions (not available on control)"

[metrics.fakespot_walmart_impression_rate.statistics.population_ratio]
numerator = "fakespot_walmart_impressions"
denominator = "urlbar_impressions"

[metrics.fakespot_impression_rate]
depends_on = ["fakespot_impressions", "urlbar_impressions"]
friendly_name = "Fakespot Impression Rate"
description = "Proportion of Fakespot impressions out of all urlbar sessions (not available on control)"

[metrics.fakespot_impression_rate.statistics.population_ratio]
numerator = "fakespot_impressions"
denominator = "urlbar_impressions"

## Clicks
[metrics.admarketplace_sponsored_clicks]
select_expression = "COUNTIF(is_terminal and event_action = 'engaged' and product_selected_result = 'admarketplace_sponsored')"
data_source = "urlbar_events"
friendly_name = "ADM sponsored clicks"
description = "Number of ADM sponsored clicks"
[metrics.admarketplace_sponsored_clicks.statistics.bootstrap_mean]

[metrics.fakespot_amazon_clicks]
select_expression = "COUNTIF(is_terminal and event_action = 'engaged' and engaged_result_type = 'rust_fakespot_amazon')"
data_source = "urlbar_events"
friendly_name = "Amazon Fakespot clicks"
description = "Number of Fakespot clicks with provider Amazon (not available on control)"
[metrics.fakespot_amazon_clicks.statistics.bootstrap_mean]

[metrics.fakespot_bestbuy_clicks]
select_expression = "COUNTIF(is_terminal and event_action = 'engaged' and engaged_result_type = 'rust_fakespot_bestbuy')"
data_source = "urlbar_events"
friendly_name = "Bestbuy Fakespot clicks"
description = "Number of Fakespot clicks with provider Bestbuy (not available on control)"
[metrics.fakespot_bestbuy_clicks.statistics.bootstrap_mean]

[metrics.fakespot_walmart_clicks]
select_expression = "COUNTIF(is_terminal and event_action = 'engaged' and engaged_result_type = 'rust_fakespot_walmart')"
data_source = "urlbar_events"
friendly_name = "Walmart Fakespot clicks"
description = "Number of Fakespot clicks with provider Walmart (not available on control)"
[metrics.fakespot_walmart_clicks.statistics.bootstrap_mean]

[metrics.fakespot_clicks]
select_expression = "COUNTIF(is_terminal and event_action = 'engaged' and engaged_result_type in ('rust_fakespot_amazon', 'rust_fakespot_bestbuy', 'rust_fakespot_walmart'))"
data_source = "urlbar_events"
friendly_name = "Fakespot clicks"
description = "Number of Fakespot clicks (not available on control)"
[metrics.fakespot_clicks.statistics.bootstrap_mean]

## CTR
[metrics.admarketplace_sponsored_ctr]
depends_on = ["admarketplace_sponsored_clicks", "admarketplace_sponsored_impressions"]
friendly_name = "Admarketplace CTR"
description = "Proportion of urlbar sessions where an Admarketplace Sponsored suggestion was clicked, out of all urlbar sessions where one was shown (not available on control)"

[metrics.admarketplace_sponsored_ctr.statistics.population_ratio]
numerator = "admarketplace_sponsored_clicks"
denominator = "admarketplace_sponsored_impressions"

[metrics.fakespot_amazon_ctr]
depends_on = ["fakespot_amazon_clicks", "fakespot_amazon_impressions"]
friendly_name = "Fakespot Amazon CTR"
description = "Proportion of urlbar sessions where a Fakespot suggestion was clicked, out of all urlbar sessions where one was shown (not available on control)"

[metrics.fakespot_amazon_ctr.statistics.population_ratio]
numerator = "fakespot_amazon_clicks"
denominator = "fakespot_amazon_impressions"

[metrics.fakespot_bestbuy_ctr]
depends_on = ["fakespot_bestbuy_clicks", "fakespot_bestbuy_impressions"]
friendly_name = "Fakespot Bestbuy CTR"
description = "Proportion of urlbar sessions where a Fakespot sponsored suggestion was clicked, out of all urlbar sessions where one was shown (not available on control)"

[metrics.fakespot_bestbuy_ctr.statistics.population_ratio]
numerator = "fakespot_bestbuy_clicks"
denominator = "fakespot_bestbuy_impressions"

[metrics.fakespot_walmart_ctr]
depends_on = ["fakespot_walmart_clicks", "fakespot_walmart_impressions"]
friendly_name = "Fakespot Walmart CTR"
description = "Proportion of urlbar sessions where a Fakespot sponsored suggestion was clicked, out of all urlbar sessions where one was shown (not available on control)"

[metrics.fakespot_walmart_ctr.statistics.population_ratio]
numerator = "fakespot_walmart_clicks"
denominator = "fakespot_walmart_impressions"

[metrics.fakespot_ctr]
depends_on = ["fakespot_clicks", "fakespot_impressions"]
friendly_name = "Fakespot CTR"
description = "Proportion of urlbar sessions where a Fakespot suggestion was clicked, out of all urlbar sessions where one was shown (not available on control)"

[metrics.fakespot_ctr.statistics.population_ratio]
numerator = "fakespot_clicks"
denominator = "fakespot_impressions"

## Dismissals
[metrics.admarketplace_sponsored_not_relevant_dismissals]
select_expression = "COUNTIF(event_action = 'annoyance' and product_engaged_result_type = 'admarketplace_sponsored' and engagement_type = 'not_relevant')"
data_source = "urlbar_events"
[metrics.admarketplace_sponsored_not_relevant_dismissals.statistics.bootstrap_mean]

[metrics.fakespot_amazon_not_relevant_dismissals]
select_expression = "COUNTIF(event_action = 'annoyance' and engaged_result_type = 'rust_fakespot_amazon' and engagement_type = 'not_relevant')"
data_source = "urlbar_events"
[metrics.fakespot_amazon_not_relevant_dismissals.statistics.bootstrap_mean]

[metrics.fakespot_bestbuy_not_relevant_dismissals]
select_expression = "COUNTIF(event_action = 'annoyance' and engaged_result_type = 'rust_fakespot_bestbuy' and engagement_type = 'not_relevant')"
data_source = "urlbar_events"
[metrics.fakespot_bestbuy_not_relevant_dismissals.statistics.bootstrap_mean]

[metrics.fakespot_walmart_not_relevant_dismissals]
select_expression = "COUNTIF(event_action = 'annoyance' and engaged_result_type = 'rust_fakespot_walmart' and engagement_type = 'not_relevant')"
data_source = "urlbar_events"
[metrics.fakespot_walmart_not_relevant_dismissals.statistics.bootstrap_mean]

[metrics.fakespot_not_relevant_dismissals]
select_expression = "COUNTIF(event_action = 'annoyance' and engaged_result_type in ('rust_fakespot_amazon', 'rust_fakespot_bestbuy', 'rust_fakespot_walmart') and engagement_type = 'not_relevant')"
data_source = "urlbar_events"
[metrics.fakespot_not_relevant_dismissals.statistics.bootstrap_mean]


[metrics.fakespot_4_star_A_grade]
select_expression = "COUNTIF(fakespot_grade_rating = 'fakespot_4_star_A_grade')"
data_source = "fakespot_events"
friendly_name = "Fakespot 4 star A grade clicks"
description = "Number of Fakespot clicks with 4 star A grade"
[metrics.fakespot_4_star_A_grade.statistics.bootstrap_mean]

[metrics.fakespot_4_star_B_grade]
select_expression = "COUNTIF(fakespot_grade_rating = 'fakespot_4_star_B_grade')"
data_source = "fakespot_events"
friendly_name = "Fakespot 4 star B grade clicks"
description = "Number of Fakespot clicks with 4 star B grade"
[metrics.fakespot_4_star_B_grade.statistics.bootstrap_mean]

[metrics.fakespot_5_star_A_grade]
select_expression = "COUNTIF(fakespot_grade_rating = 'fakespot_5_star_A_grade')"
data_source = "fakespot_events"
friendly_name = "Fakespot 5 star A grade clicks"
description = "Number of Fakespot clicks with 5 star A grade"
[metrics.fakespot_5_star_A_grade.statistics.bootstrap_mean]

[metrics.fakespot_5_star_B_grade]
select_expression = "COUNTIF(fakespot_grade_rating = 'fakespot_5_star_B_grade')"
data_source = "fakespot_events"
friendly_name = "Fakespot 5 star B grade clicks"
description = "Number of Fakespot clicks with 5 star B grade"
[metrics.fakespot_5_star_B_grade.statistics.bootstrap_mean]

## Remote Settings Latency
[metrics.fx_urlbar_quick_suggest_remote_settings_latency_ms]
[metrics.fx_urlbar_quick_suggest_remote_settings_latency_ms.statistics.bootstrap_mean]

[data_sources]

[data_sources.fakespot_events]
from_expression = """(
    SELECT 
        *,
        event.name AS event_name,
        CASE WHEN (mozfun.map.get_key(event.extra, 'grade') = 'B' and (round(CAST(mozfun.map.get_key(event.extra, 'rating') AS FLOAT64),0) = 5)) THEN 'fakespot_5_star_B_grade'
        WHEN (mozfun.map.get_key(event.extra, 'grade') = 'A' and (round(CAST(mozfun.map.get_key(event.extra, 'rating') AS FLOAT64),0) = 5)) THEN 'fakespot_5_star_A_grade'
        WHEN(mozfun.map.get_key(event.extra, 'grade') = 'A' and (round(CAST(mozfun.map.get_key(event.extra, 'rating') AS FLOAT64),0) = 4 )) THEN 'fakespot_4_star_A_grade'
        WHEN(mozfun.map.get_key(event.extra, 'grade') = 'B' and (round(CAST(mozfun.map.get_key(event.extra, 'rating') AS FLOAT64),0) = 4 )) THEN 'fakespot_4_star_B_grade' end as fakespot_grade_rating  

    FROM `mozdata.firefox_desktop.events`
    CROSS JOIN UNNEST(events) AS event
    WHERE
        event.category = 'urlbar'
        AND event.name = 'fakespot_engagement'
)"""

friendly_name = "fakespot_grade_rating_events"
description = "fakespot engagement with grades and rating"
## Review Checker
#[metrics.review_checker_displayed_count]
#select_expression = "COUNTIF(event_category = 'shopping' and event.name = 'surface_displayed')"
#data_source = "events"
#[metrics.review_checker_displayed_count.statistics.bootstrap_mean]

## Remote Settings Latency
#[metrics.fx_urlbar_quick_suggest_remote_settings_latency_ms]
#[metrics.fx_urlbar_quick_suggest_remote_settings_latency_ms.statistics.bootstrap_mean]