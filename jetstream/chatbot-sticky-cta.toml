[experiment]

[experiment.exposure_signal]
name = "onboarding_start"
friendly_name = "Chatbot Onboarding Start"
description = "Clients who start chatbot onboarding"
data_source = "chatbot"
select_expression = "COALESCE(event_name = 'onboarding_provider_choice_displayed', FALSE)"
window_start = 0
window_end = "analysis_window_end"

[metrics]

weekly = [
    "chatbot_engagement",
    "onboarding_complete",
]

overall = [
    "chatbot_engagement",
    "onboarding_complete",
]

[metrics.chatbot_engagement.statistics.binomial]
[metrics.onboarding_complete.statistics.binomial]

[metrics.chatbot_engagement]
friendly_name = "Chatbot Engagement"
description = "Percentage of clients who opened the chatbot panel in the sidebar after provider is selected"
select_expression = "COALESCE(LOGICAL_OR(event_name = 'sidebar_toggle'), FALSE)"
data_source = "chatbot"

[metrics.onboarding_complete]
select_expression = "COALESCE(LOGICAL_OR(event_name = 'onboarding_finish'), FALSE)"
data_source = "chatbot"
friendly_name = "Chatbot Onboarding Completed"
description = "Percentage of clients who completed Chatbot onboarding"

[data_sources.chatbot]
from_expression = """(
  SELECT 
    legacy_telemetry_client_id as client_id,
    CAST(submission_timestamp as DATE) as submission_date,
    event_name
  FROM
    `mozdata.firefox_desktop.events_stream`
  WHERE
    event_category IN ('genai.chatbot')
    AND ((event_name = 'sidebar_toggle' AND JSON_VALUE(event_extra.opened) = 'true' AND JSON_VALUE(event_extra.provider) <> 'none')
         OR event_name IN ('onboarding_finish', 'onboarding_provider_choice_displayed'))
  GROUP BY 1, 2, 3
)"""
experiments_column_type = "none"
friendly_name = "Chatbot Open"
description = "Clients who open chatbot panel after provider selected"
