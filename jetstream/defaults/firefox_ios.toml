[metrics]
daily = ["retained", "client_level_daily_active_users_v2"]
weekly = [
    "retained",
    "active_hours",
    "days_of_use",
    "search_count",
    "serp_ad_clicks",
    "client_level_daily_active_users_v2",
]
overall = [
    "active_hours",
    "days_of_use",
    "search_count",
    "serp_ad_clicks",
    "client_level_daily_active_users_v2",
]

preenrollment_weekly = [
    "active_hours",
    "days_of_use",
    "search_count",
    "serp_ad_clicks",
    "client_level_daily_active_users_v2",
]

preenrollment_days28 = [
    "active_hours",
    "days_of_use",
    "search_count",
    "serp_ad_clicks",
    "client_level_daily_active_users_v2",
]

[metrics.retained]
select_expression = "COALESCE(COUNT(document_id), 0) > 0"
data_source = "baseline"

[metrics.retained.statistics]
binomial = {}

##

[metrics.active_hours.statistics]
deciles = {}
bootstrap_mean = {}
[metrics.active_hours.statistics.linear_model_mean]
[metrics.active_hours.statistics.linear_model_mean.covariate_adjustment]
period = "preenrollment_week"

##

[metrics.days_of_use.statistics]
deciles = {}
bootstrap_mean = { drop_highest = 0 }
empirical_cdf = {}
[metrics.days_of_use.statistics.linear_model_mean]
drop_highest = 0.0
[metrics.days_of_use.statistics.linear_model_mean.covariate_adjustment]
period = "preenrollment_week"

##

[metrics.search_count.statistics]
deciles = {}
bootstrap_mean = {}
[metrics.search_count.statistics.linear_model_mean]
[metrics.search_count.statistics.linear_model_mean.covariate_adjustment]
period = "preenrollment_week"

##

[metrics.serp_ad_clicks]
friendly_name = "Ad Clicks"
description = "Number of ad clicks on a search engine results page."
select_expression = "{{agg_sum('ad_click')}}"
data_source = "mobile_search_clients_engines_sources_daily"

[metrics.serp_ad_clicks.statistics]
deciles = {}
bootstrap_mean = {}
[metrics.serp_ad_clicks.statistics.linear_model_mean]
[metrics.serp_ad_clicks.statistics.linear_model_mean.covariate_adjustment]
period = "preenrollment_week"

[metrics.client_level_daily_active_users_v2.statistics.per_client_dau_impact]
pre_treatments = ['normalize_over_analysis_period']
